<mvc:View
   xmlns="sap.m"
   controllerName="sap.ui.demo.walkthrough.controller.InvoiceList"
   xmlns:mvc="sap.ui.core.mvc">

   <List
      headerText="{i18n>invoiceListTitle}"
      class="sapUiResponsiveMargin"
      width="auto"
      items="{invoice>/Invoices}" >

      <items>
         <!-- 
            - Step 21: Expression Binding
               - 官方 wiki: Only use expression binding for trivial calculations.
               - 这类表达式只是用于一些简单的计算/逻辑判断 etc.
               
            - 为控件添加 numberState 属性
               - {= ...}：「{} 包裹，= 开头」-> 表示启用绑定语法
                  - This symbol is used to initiate a new binding syntax, 
                  - it's called an expression and can do simple calculation logic 
                  - like the ternary operator shown here.

               - $ 的目的是对后面的指定 Data Model 的语法进行转义
               - 再往后就是正常的三元运算了
               - 整体含义就是判断 每条数据的 价格，如果 > 50 则对应 Error（显示红色），如果 < 50 则对应 Success（显示绿色）

          -->
         <ObjectListItem
            title="{invoice>Quantity} x {invoice>ProductName}"
            number="{
               parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
               type: 'sap.ui.model.type.Currency',
               formatOptions: {
                  showMeasure: false
               }
            }"
            numberUnit="{view>/currency}"
            numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success'}"/>
      </items>
   </List>

</mvc:View>