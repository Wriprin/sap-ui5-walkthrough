<mvc:View
   xmlns="sap.m"
   controllerName="sap.ui.demo.walkthrough.controller.InvoiceList"
   xmlns:mvc="sap.ui.core.mvc">

   <List
      headerText="{i18n>invoiceListTitle}"
      class="sapUiResponsiveMargin"
      width="auto"
      items="{invoice>/Invoices}" >

      <items>
         <ObjectListItem
            title="{invoice>Quantity} x {invoice>ProductName}"
            number="{
               parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
               type: 'sap.ui.model.type.Currency',
               formatOptions: {
                  showMeasure: false
               }
            }"
            numberUnit="{view>/currency}"
            numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success'}">

               <!-- 
                  7. firstStatus - ObjectStatus 标签来显示 Status 数据
                  8. path 指代显示的对应数据，同时 也作为了我们 formatter.js 中 statusText FUNC 的 sStatus 实参
                  9. formatter 指代调用对应 formatter 的 statusText Func 来处理（Format） path 指定的对应数据
                -->
               <firstStatus>
                  <!-- 10. the Meaning of "."
                     - A "." in front of the formatter name means that 
                     - the function is looked up in the controller of the current view. 
                     - There we defined a property formatter that holds our formatter functions, 
                     - so we can access it by .formatter.statusText.
                   -->
                  <ObjectStatus 
                     text="{
                        path: 'invoice>Status',
                        formatter: '.formatter.statusText'
                     }"/>
               </firstStatus>

            </ObjectListItem>
      </items>
   </List>

</mvc:View>